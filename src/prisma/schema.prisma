generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URI")
}

model User {
    id                     String            @id @default(uuid()) @map("_id")
    password               String
    email                  String            @unique
    names                  String
    firstLastName          String
    secondLastName         String
    avatar                 String            @default("No definido")
    phone                  String            @unique @default("No definido")
    residence_phone_number String            @default("No definido")
    phone_whatsapp         String            @default("No definido")
    birth_day              DateTime?
    genre                  String            @default("No definido")
    residence_address      String            @default("No definidos")
    city                   String            @default("No definidos")
    Document               Document[]
    createdAt              DateTime          @default(now())
    updatedAt              DateTime          @updatedAt
    LoanApplication        LoanApplication[]
}

model UsersIntranet {
    id         String   @id @default(uuid()) @map("_id")
    name       String
    lastNames  String
    email      String   @unique
    password   String
    phone      String   @unique @default("No definido")
    rol        String   @default("No definido")
    avatar     String   @default("No definido")
    updated_at DateTime @default(now())
    created_at DateTime @default(now())
}

model LoanApplication {
    id                   String     @id @default(uuid()) @map("_id")
    userId               String
    employeeId           String?    @default("Standby")
    user                 User       @relation(fields: [userId], references: [id])
    fisrt_flyer          String
    second_flyer         String
    third_flyer          String
    reasonReject         String?
    reasonChangeCantity  String?
    cantity              String
    bankSavingAccount    Boolean    @default(true)
    bankNumberAccount    String
    entity               String
    labor_card           String
    terms_and_conditions Boolean
    signature            String
    status               StatusLoan @default(Pendiente)
    created_at           DateTime   @default(now())
    updated_at           DateTime   @updatedAt
}

model Document {
    id            String   @id @default(uuid()) @map("_id")
    user          User     @relation(fields: [userId], references: [id])
    userId        String
    documentFront String   @default("void")
    documentBack  String   @default("void")
    number        String   @default("void")
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
}

enum StatusLoan {
    Pendiente
    Aprobado
    Rechazado
    Borrador
    Archivado
}

enum RolIntranet {
    admin
    employee
}

enum TypesDocument {
    CC
    CE
    PASAPORTE
}
